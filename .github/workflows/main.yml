---
name: CI

on:
  workflow_run:
    workflows:
      - "code linter"
    types:
      - completed

defaults:
  run:
    working-directory: 'ansible-ansible'

jobs:
  arch:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
          - artixlinux:latest
        ansible-version:
          - '6.7'
        python:
          - '3.10'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  debian:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:11
          - debian:12
        ansible-version:
          - '6.7'
        python:
          - '3.10'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  ubuntu:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - ubuntu:20.04
          - ubuntu:22.04
        ansible-version:
          - '6.7'
        python:
          - '3.10'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  arch_version_6:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - arch
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible-version:
          - '6.1'
          - '6.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  arch_version_7:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - arch
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible-version:
          # - '7.2'
          - '7.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  arch_version_8:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - arch
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible-version:
          - '8.1'
          - '8.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  arch_version_9:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - arch
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible-version:
          - '9.1'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  debian_version_6:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - debian
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:12
        ansible-version:
          - '6.1'
          - '6.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  debian_version_7:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - debian
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:12
        ansible-version:
          # - '7.1' works *NOT* in a github workflow, but "on my machine" :}
          # - '7.2'
          # - '7.3'
          # - '7.4'
          # - '7.5'
          # - '7.6'
          - '7.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  debian_version_8:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - debian
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:12
        ansible-version:
          - '8.1'
          - '8.7'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  debian_version_9:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python }}"
    runs-on: ubuntu-20.04
    needs:
      - debian
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:12
        ansible-version:
          - '9.1'
        python:
          - '3.10'
          - '3.11'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-ansible'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"

        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}
